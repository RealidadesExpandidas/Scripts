using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;

public class ControlMecanimTouch : MonoBehaviour
{
    // Start is called before the first frame update
[Header ("GestoDosManos - Avatar")]
    public ManoL manoL;
    public ManoR manoR;
[Header ("GestoDosManos")]
    //public ManoL manoLGestoEmpujar;
    //public ManoR manoRGestoEmpujar;

    public ManoLSubir empujarL;
    public ManoRSubir empujarR;

[Header ("Macaco")]
    
    public GameObject macaco;
    public GameObject macacoColor;
    public ManoL cercano;
    public GameObject cercano2;
    public GameObject hombro;
    public ManoR hombroR;
    public GameObject cabeza;

  [Header ("Mensajes")]  
    public TextMeshProUGUI text1; 
    public TextMeshProUGUI text2; 
    public TextMeshProUGUI text3;
    public TextMeshProUGUI text4;
    public TextMeshProUGUI text5;
    public TextMeshProUGUI text6;
    public TextMeshProUGUI text7;
    public TextMeshPro textMensajes;

    public Animator macaco_animator;
   [Header ("ManoGameObject")]
    public GameObject mano_d_avatar;
    public GameObject mano_i_avatar;
    public GameObject mano_d_fruidor;
    public GameObject mano_i_fruidor;

    private float prevSpeed;
    private int contador_contacto = 0;

    private float dist_mano_d = 0;
    private float dist_mano_i = 0;
    private float distancia_manos = 0;
    private float map_dist_vel = 0;
    private int trans_1 = 0;
    private int trans_2 = 0;
    private int trans_3 = 0;
    private int trans_4 = 0;

    int contacto = 0;
    int cambio = 0;
    int prevcontacto = 0;

    int empujar = 0;
    int mensajes = 1;

    float alturaR;
    float alturaL;
    float lejosR;
    float lejosL;

    void Start()
    {
        text1 = GameObject.Find("text1").GetComponent<TextMeshProUGUI>();
        text2 = GameObject.Find("text2").GetComponent<TextMeshProUGUI>();
        text3 = GameObject.Find("text3").GetComponent<TextMeshProUGUI>();
        text4 = GameObject.Find("text4").GetComponent<TextMeshProUGUI>();
        text5 = GameObject.Find("text5").GetComponent<TextMeshProUGUI>();
        text7 = GameObject.Find("text7").GetComponent<TextMeshProUGUI>();
        macaco_animator = macaco.GetComponent<Animator>();
        hombro.SetActive(false);
    }

    // Update is called once per frame
    void Update()
    {
// entrada

if(cercano.izquierda  & mensajes == 1)
        {
            mensajes = 2;
            cercano2.SetActive(false);
        }

//Extender los brazos
if(distancia_manos > 1.2  & mensajes == 2)
        {
            mensajes = 3;
            //cercano2.SetActive(false);
            //hombro.SetActive(true);
        }

//Tocar manos
 if(contacto == 1  & mensajes == 3)
        {
            mensajes = 4;
            //cercano2.SetActive(false);
            hombro.SetActive(true);
        }
//Tocar hombro
if(hombroR.derecha  & mensajes == 4)
        {
            mensajes = 5;
            //cercano2.SetActive(false);
           macaco_animator.speed = 0;
        }
//Tocar subir brazos
if(alturaR > 1.8 & alturaR > 1.8 & distancia_manos < 0.5 & mensajes == 5)
        {
            //mensajes = 6;
            //cercano2.SetActive(false);
            Vector3 Target = macaco.GetComponent<Transform>().position;
            Vector3 Target2 =  new Vector3(0, 2, 0);
           
           macacoColor.GetComponent<Renderer>().material.color = Color.yellow;
           macaco.transform.position = Vector3.MoveTowards(macaco.transform.position, Target2, 1f * Time.deltaTime);
           if(macaco.transform.position == Target2){
               mensajes = 6;
           }
           //macaco.transform.position = mano_d_fruidor.GetComponent<Transform>().position;
        }
//Bajar brazos
        if(alturaR < 0.8 & alturaR < 0.8 & distancia_manos < 0.5 & mensajes == 6)
        {
            //mensajes = 6;
            //cercano2.SetActive(false);
            //Vector3 Target = macaco.GetComponent<Transform>().position;
            Vector3 Target = new Vector3(0, 0, 0);
            
           macacoColor.GetComponent<Renderer>().material.color = Color.red;
           macaco.transform.position = Vector3.MoveTowards(macaco.transform.position, Target, 1f * Time.deltaTime);
           if(macaco.transform.position == Target){
               mensajes = 7;
           }
           //macaco.transform.position = mano_d_fruidor.GetComponent<Transform>().position;
        }

//Empujar
        if(empujarL.subirL & empujarR.subirR & mensajes == 7)
        {
            //mensajes = 6;
            //cercano2.SetActive(false);
            //Vector3 Target = macaco.GetComponent<Transform>().position;
            Vector3 Target = new Vector3(0, 0, 5);
            
           macacoColor.GetComponent<Renderer>().material.color = Color.green;
           macaco.transform.position = Vector3.MoveTowards(macaco.transform.position, Target, .5f * Time.deltaTime);
           if(macaco.transform.position == Target){
               mensajes = 8;
           }
           
        } 

        /*Gesto empujar
 if(manoLGestoEmpujar.izquierda & manoRGestoEmpujar.derecha & empujar == 0)
        {
            empujar= 1;
        }

        if(!manoLGestoEmpujar.izquierda & !manoRGestoEmpujar.derecha)
        {
            empujar= 0;
        }
*/
    // DETECCION CAMBIO EN COLLISION
        if(manoL.izquierda & manoR.derecha & contacto == 0)
        {
            contacto= 1;
        }

        if(!manoL.izquierda & !manoR.derecha)
        {
            contacto= 0;
        }

         if (prevcontacto != contacto && prevcontacto == 0)
         {
             cambio = 1;
             //macaco.GetComponent<Renderer>().material.color = Color.red;
         } 

         else 
         {
             cambio = 0;
         }
         
    
        prevcontacto = contacto;

        if (cambio == 1)
        {
            contador_contacto ++;
            if (contador_contacto > 4){ contador_contacto = 1; }
            //macaco_animator.SetFloat("contador_contacto", contador_contacto);

            switch(contador_contacto)
            {
                case 1: 
                        trans_1 = 1;
                        trans_2 = 0;
                        trans_3 = 0;
                        trans_4 = 0;
                        macacoColor.GetComponent<Renderer>().material.color = Color.red;
                        //hombro.SetActive(true);
                break;

                case 2: 
                        trans_1 = 0;
                        trans_2 = 1;
                        trans_3 = 0;
                        trans_4 = 0;
                        macacoColor.GetComponent<Renderer>().material.color = Color.blue;
                break;

                case 3: 
                        trans_1 = 0;
                        trans_2 = 0;
                        trans_3 = 1;
                        trans_4 = 0;
                        macacoColor.GetComponent<Renderer>().material.color = Color.green;
                break;

                case 4: 
                        trans_1 = 0;
                        trans_2 = 0;
                        trans_3 = 0;
                        trans_4 = 1;
                        macacoColor.GetComponent<Renderer>().material.color = Color.yellow;
                break;

            }

            macaco_animator.SetInteger("trans_1", trans_1);
            macaco_animator.SetInteger("trans_2", trans_2);
            macaco_animator.SetInteger("trans_3", trans_3);
            macaco_animator.SetInteger("trans_4", trans_4);
        }
    // FIN DETECCION CAMBIO EN COLLISION



    //DISTANCIA MANOS COMO CONTROL DE VELOCIDAD EN ANIMATOR
    dist_mano_d = Vector3.Distance(mano_d_avatar.GetComponent<Transform>().position, mano_d_fruidor.GetComponent<Transform>().position);

    dist_mano_i = Vector3.Distance(mano_i_avatar.GetComponent<Transform>().position, mano_i_fruidor.GetComponent<Transform>().position);

//Altura de las manos
    alturaR = mano_d_fruidor.GetComponent<Transform>().position.y;
    alturaL = mano_i_fruidor.GetComponent<Transform>().position.y;

 //Distancia Z en manos del cuerpo   
    lejosR = mano_d_fruidor.GetComponent<Transform>().position.z- cabeza.GetComponent<Transform>().position.z;
    lejosL = mano_i_fruidor.GetComponent<Transform>().position.z- cabeza.GetComponent<Transform>().position.z;

    distancia_manos = dist_mano_d + dist_mano_i / 2;
    //distancia_manos = dist_mano_d + dist_mano_i;

    map_dist_vel =  map(distancia_manos, 2, 0, 1, 0);

if( mensajes !=5){
    macaco_animator.speed = map_dist_vel*2;
    }

    //FIN DISTANCIA MANOS

    
    //PRINTS
        text1.SetText("Cambio : " + cambio.ToString());
        text2.SetText("contacto : " + contacto.ToString());
        text3.SetText("Contador Contacto: " + contador_contacto.ToString());
        text4.SetText("distancia manos : "+ distancia_manos.ToString());
        text5.SetText("velocidad animator : " + macaco_animator.speed.ToString());
        text6.SetText("contacto : " + empujar.ToString());
        text7.SetText("alturaR : " + mano_i_fruidor.GetComponent<Transform>().localPosition.ToString());
        
        //Mensajes para el usuario

         switch(mensajes)
            {
                case 1:
                textMensajes.SetText("Acercate al Avatar");
                break;
                
                case 2:
                textMensajes.SetText("Extiende los brazos para cambiar velocidad de Avatar");
                break;
                case 3:
                textMensajes.SetText("Toca las manos del Avatar");
                break;
                case 4:
                textMensajes.SetText("Toca el hombro");
                break;
                case 5:
                textMensajes.SetText("Levanta las manos");
                break;
                case 6:
                textMensajes.SetText("baja las manos");
                break;
                }
    //FIN PRINTS

    }

    float map(float s, float a1, float a2, float b1, float b2)
    {
        return b1 + (s-a1)*(b2-b1)/(a2-a1);
    }


}
